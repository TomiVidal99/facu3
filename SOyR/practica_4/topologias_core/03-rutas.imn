node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 10.0.4.2/24
	!
	interface eth0
	 ip address 10.0.2.2/24
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
    }
    canvas c1
    iconcoords {577.0 262.0}
    labelcoords {579.0 302.0}
    interface-peer {eth1 n2}
    services {IPForward StaticRoute}
    interface-peer {eth0 n4}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 10.0.0.0/24 via 10.0.4.1
	/sbin/ip route add 10.0.0.0/24 via 10.0.2.1 metric 100
	
	}
    }
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.1.10/24
	!
    }
    canvas c1
    iconcoords {674.0 129.0}
    labelcoords {674.0 161.0}
    interface-peer {eth0 n1}
    services {DefaultRoute}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {195.0 441.0}
    labelcoords {195.0 473.0}
    services {DefaultRoute}
    interface-peer {eth0 n4}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth2
	 ip address 10.0.3.1/24
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {331.0 259.0}
    labelcoords {331.0 291.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n1}
    services {IPForward StaticRoute}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 10.0.1.0/24 via 10.0.2.2
	/sbin/ip route add 10.0.1.0/24 via 10.0.3.2 metric 100
	
	
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth1
	 ip address 10.0.4.1/24
	!
	interface eth0
	 ip address 10.0.3.2/24
	!
    }
    canvas c1
    iconcoords {449.0 405.0}
    labelcoords {449.0 437.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n1}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 10.0.0.0/24 via 10.0.3.1
	/sbin/ip route add 10.0.1.0/24 via 10.0.4.2
	}
    }
}

link l2 {
    nodes {n1 n2}
    bandwidth 0
}

link l1 {
    nodes {n3 n4}
    bandwidth 0
}

link l3 {
    nodes {n4 n1}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n1}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

